#define _CRT_SECURE_NO_WARNINGS 1
#include<iostream>
using namespace std;

//静态成员
// 静态成员就是在成员函数前加上关键字static，称为静态成员
// 静态成员分为 - 静态成员变量它是在编译阶段就已经分配内存了相当于=程序还没有运行之前就已经分配好内存了在 - 全局区
//  静态成员变量
//   所有对象共享在同一份数据
//   在编译阶段分配内存
//   类内声明，类外初始化
//  静态成员函数
//   所有对象共享一个函数
//   静态成员函数只能访问静态成员变量

//静态成员变量
class Person
{
public:
	//Person();
	//~Person();

	//1.所有对象共享在同一份数据
	//2.在编译阶段分配内存
	//3.类内声明，类外初始化
	static int m_a;//声明

	//静态成员变量也是有访问权限的
private:
	static int m_b;
};

int Person::m_a = 100;//外面初始化
int Person::m_b = 200;

void test01()
{
	Person p;
	cout << p.m_a << endl;
	Person p2;
	p2.m_a = 200;
	cout << p.m_a << endl;
}

void test02()
{
	//静态成员变量 不属于某个对象上，所有对象都共享同一份数据
	//因此静态成员变量有两种访问方式
	
	// 通过对象进行访问
	//Person p;
	//cout << p.m_a << endl;

	// 通过类名进行访问
	cout << Person::m_a << endl;
	//cout << Person::m_b << endl;//尽管不是在对象上，但静态成员变量在私有区域就会访问不到了
}

int main()
{
	//test01();
	test02();

	system("pause");
	return 0;
}

//静态成员函数
//
