#define _CRT_SECURE_NO_WARNINGS 1
#include<iostream>
#include<stdio.h>
using namespace std;

//在C++中非零为真，零为假，这个和C一样

//逻辑运算符 - C语言一样
//作用 - 用于根据表达式的值返回真值或假值
// 运算符 - !、&&、||

//int main()
//{
//	////逻辑运算符 非 !
//	////真就变假，假就变真
//	//int a = 10;
//	//cout << !a << endl;
//	//cout << !!a << endl;//双重否定表示肯定
//
//	////逻辑运算符 与 &&
//	////同真为真，其余为假
//	//int b = 10;//0   0
//	//int c = 20;//10  0
//	//cout << (b && c) << endl;//0  0
//
//	//逻辑运算符 或 ||
//	//同假为假，其余为真
//	int a = 10;//0   0
//	int b = 10;//10  0
//	cout << (a || b) << endl;//1  0
//
//	system("pause");
//	return 0;
//}

//程序流程结构 - 就是C的语法结构
//顺序结构 - 所有程序一条路走到黑就是，不发生跳转之类的
//选择结构 - 依据条件是否满足，有选择的执行相应功能
//循环结构 - 依据条件是否满足，循环多次执行某段代码

//程序是由上至下执行的所以要把较大的比较直放在前面

//int main()
//{
//	//选择结构 - if语句
//	//执行满足条件的语句
//	//三种形式
//	//// 单行格式if语句
//	//// 语句 - if(条件){条件满足执行的语句}
//	////列子:用户输入分数，如果大于600，视为考上一本大学，输出在屏幕上
//	////用户输入分数
//	//int score = 0;
//	//cout << "请输入分数" << endl;
//	//cin >> score;
//	////打印用户输入的分数
//	//cout << "您输出的分数是 = " << score << endl;
//	////判断分数是否大于600，如果大于，输出
//	////注意是事项 - if条件后面不要加分号
//	//if (score > 600)//如果加了分号不管判断什么，if语句里面的都会执行
//	//{
//	//	cout << "恭喜您考上的一本大学" << endl;
//	//}
//
//	//// 多行格式if语句
//	//// 语句 - if(条件){条件满足执行的语句}else{条件不满足执行的语句};
//	////列子:用户输入分数，如果大于600，视为考上一本大学，输出在屏幕上，没大于600打印为考上一本大学
//	////用户输入分数
//	//int core = 0;
//	//cout<<"请输入分数"<< endl;
//	//cin >> core;
//	////提示用户输入的分数
//	//cout << core << endl;
//	////判断分数是否大于600或小于600
//	//if (core>600)
//	//{
//	//	cout << "考上一本大学" << endl;
//	//}
//	//else
//	//{
//	//	cout << "没考上鬼" << endl;
//	//}
//
//	//// 多条件的if语句
//	//// 语句 - if(条件1){条件1满足执行的语句}else if(条件2){条件2满足执行的语句}…else{都不满足};
//	////列子:还是高考，输入分数，如大于600，视为一本大学输出。大于500，视为二本大学输出。大于400，视为考上三本大学输出，小于等于400，视为为考上本科，其他没考上
//	////用户输入分数
//	//int score = 0;
//	//cout << "请输入分数" << endl;
//	//cin >> score;
//	////打印用户输入的分数
//	//cout << "您输出的分数是 = " << score << endl;
//	////判断…………
//	//if (score > 600)//如果加了分号不管判断什么，if语句里面的都会执行
//	//{
//	//	cout << "恭喜您考上的一本大学" << endl;
//	//}
//	//else if (score > 500)
//	//{
//	//	cout << "恭喜您考上的二本大学" << endl;
//	//}
//	//else if(score > 400)
//	//{
//	//	cout << "恭喜您考上的三本大学" << endl;
//	//}
//	//else
//	//{
//	//	cout << "恭喜喜提高三一年" << endl;
//	//}
//
//	//嵌套的if语句
//	//作用 - 更精准的条件判断
//	//语句 - 在if语句中添加一个if语句判断
//	//案列：还还是高考，在上一题的基础上加上，一本中大于700考上北大，650考上清华，600考上人大
//	//用户输入分数
//	int score = 0;
//	cout << "请输入分数" << endl;
//	cin >> score;
//	//打印用户输入的分数
//	cout << "您输出的分数是 = " << score << endl;
//	//判断…………
//	if (score > 600)//如果加了分号不管判断什么，if语句里面的都会执行
//	{
//		if (score > 700)
//		{
//			cout << "恭喜您考上的北京大学" << endl;
//		}
//		else if (score > 650)
//		{
//			cout << "恭喜您考上的清华大学" << endl;
//		}
//		else
//		{
//			cout << "恭喜您考上的人民大学" << endl;
//		}
//	}
//	else if (score > 500)
//	{
//		cout << "恭喜您考上的二本大学" << endl;
//	}
//	else if(score > 400)
//	{
//		cout << "恭喜您考上的三本大学" << endl;
//	}
//	else
//	{
//		cout << "恭喜喜提高三一年" << endl;
//	}
//	
//
//	system("pause");
//	return 0;
//}

//案列练习 - 三只小猪称体重，判断那个小猪是最重的
//int main()
//{
//	int a, b, c;
//	cout << "a重为" << endl;
//	cin >> a;
//	cout << "b重为" << endl;
//	cin >> b;
//	cout << "c重为" << endl;
//	cin >> c;
//
//	if (a == b && a == c)
//	{
//		cout << "一样重" << a << endl;
//	}
//	else if (a >= b && a >= c)
//	{
//		if (a == b && a != c)
//		{
//			cout << "ab一样重" << a << endl;
//		}
//		else if (a == c && a != b)
//		{
//			cout << "ac一样重" << a << endl;
//		}
//		else
//		{
//			cout << "a重" << a << endl;
//		}
//	}
//	else if (b > a && b >= c)
//	{
//		if (b == c && b != a)
//		{
//			cout << "bc一样重" << b << endl;
//		}
//		else
//		{
//			cout << "b重" << b << endl;
//		}
//	}
//	else
//	{
//		cout << "c重" << c << endl;
//	}
//	system("pause");
//	return 0;
//}

//三目运算符 - C一样，但有一个地方不知道一样不一样
//用法 - 通过三目运算符实现简单的判断
//语法 - 表达式1?表达式2:表达式3;
//int main()
//{
//	//三目运算符
//
//	//创建三个变量a,b,c
//	//将a和b作比较，将变量大的值赋值给变量C
//	int a = 10;
//	int b = 20;
//	int c = 0;
//	c = (a > b ? a : b);//问号前是判断，判断为真执行问号后面的，判断为假执行冒号后面的
//	cout << "c = " << c << endl;
//
//	//在C++重三目运算符返回的是变量，可以继续赋值 - c不知道
//	(a > b ? a : b) = 100;
//	cout << "a = " << a << endl;
//	cout << "b = " << b << endl;
//
//	system("pause");
//	return 0;
//}

//switch语句 - C语言一样
//作用 - 执行多条件分支语句
//语法 - c一模一样
//if和switch区别
//switch 缺点：判断时候只能是整型或者字符型，不可以是一个区间。反过来就是if的有点
//switch 优点：结构清晰，执行效率高
//注意1：switch语句表达式类型只能是整型或者字符型
//注意2：case里如果是没有break，那么程序会一直向下执行
//总结：与if语句比，对于多条件判断时，switch结构清晰，执行效率高，缺点时switch不可以判断区间

int main()
{
	//switch语句
	//案例 - 给电影打分，10~9经典，8~7非常好，6~5一般，5以下烂片
	//1.提示用户给电影评分
	cout << "打分" << endl;
	//2.用户进行打分
	int score = 0;
	cin >> score;
	cout << "分数 = " << score << endl;
	if (score > 10)
	{
		cout << "错误" << endl;
	}
	//3.根据用户输入的分数来提示用户最后的结果
	switch (score)
	{
	case 10:
	case 9:
		cout << "经典电影" << endl;
		break;
	case 8:
	case 7:
		cout << "非常好" << endl;
		break;
	case 6:
	case 5:
		cout << "一般" << endl;
		break;
	default:
		cout << "垃圾" << endl;
		break;
	}
	system("pause");
	return 0;
}


