#define _CRT_SECURE_NO_WARNINGS 1
#include<stdio.h>//C语言最基本的函数
#include<iostream>//应该是C++的机本内容
#include<string>//C++风格的内容
#include<string.h>//操作字符函数
#include<stdbool.h>
using namespace std;
//字符型 - 和C语言一模一样
//作用：字符型变量用于显示单个字符
//语法：char ch = 'a';//单引号里只能写一个字符
//注意1：在显示字符型变量时，用单引号将字符括起来，不要用双引号
//注意2：单引号内只能有一个字符，不可以是字符串
//C和C++中字符型变量只占用1个字节
//字符型变量并不是把字符本身到内存中存储，而是将对应的ASCII编码存放到存储单元

//int main()
//{
//	//1.字符型变量创建方式
//	char ch = 'a';
//	cout << ch << endl;
//
//	//2.字符型变量所占内存大小
//	cout <<"char占用空间单位字节=" << sizeof(char) << endl;
//
//	//3.字符型变量常见错误
//	//char ch2 = "b";//创建字符型变量时候，要用单引号
//	//char ch2 = 'abdce'//创建字符型变量时候，单引号内只能有一个字符
//
//	//4.字符型变量对应ASCII编码
//	//a - 97
//	//A - 65
//	cout << (int)ch << endl;
//	printf("%d ", ch);
//	//ASCII大致分为两部分
//	// 0-31分配给了控制字符，用于控制像打印机等一些外围设备
//	// 32-126分配给了能在键盘上找到的字符，当查看或打印文档时候就会出现
//
//	//printf("123\n");
//	system("pause");
//	return 0;
//}

//转义字符 - 一样
//作用:用于表示一些不能显示出来的ASCII字符
//现阶段我们常用的转义字符有: \n  \\  \t

//int main()
//{
//	//转义字符
//	
//	//换行符 \n
//	cout << "hello world\n";
//
//	//反斜杠 \\ 
//	cout << "\\" << endl;
//
//	//水平制表符 \t,\t是占了8个位置，可以理解为像数组增容一样.作用可以整齐输出数据
//	cout << "aaaaaaa\thello woeld" << endl;
//	cout << "aaa\thello woeld" << endl;
//	cout << "aaaaa\thello woeld" << endl;
//
//	system("pause");
//	return 0;
//}

//字符串型
//作用：用于表示一串字符
//两种风格
// C风格字符串 - char 变量名[] = "字符串值";
// C++风格字符串 - string 变量名 = "字符串值";

//int main()
//{
//	//1.C风格字符串
//	//注意事项 char 字符串名 []
//	//注意事项2 等号后面 要用双引号 包含起来字符串
//	char str[] = "hello world";
//	printf("%s \n", str);
//
//	//2.C++风格字符串，
//	//注意：要用到string头文件
//	string str2 = "hello world";
//	cout << str2<< endl;
//
//	system("pause");
//	return 0;
//}

//布尔数据类型bool - C++新加入的,本质是整型，只能依靠整形转换，0.1是0，0.9也是0，会把小数位给清除了
//作用 - 布尔数据类型代表真或假的值，就是返回值只有两种
//只有两个值 - true(真本质是1)，false(假本质是0)
//bool类型占1个字节大小

//int main()
//{
//	//1.创建bool数据类型
//	bool flag = true;//真
//	cout << flag << endl;
//
//	flag = false;//假
//	cout << flag << endl;
//	//本质上1代表真 0代表假
//
//	//2.bool类型所占的内存空间
//	cout << "bool类型所占内存空间(单位字节) = " << sizeof(bool) << endl;
//
//	system("pause");
//	return 0;
//}

//数据的输入 - 相当于C语言中的scanf
//作用 - 用于从键盘获取数据
//语法 - cin >> 变量

//int main()
//{
//	//1.整型
//	//int a = 0;
//	//cout << "请给a赋值" << endl;
//	////scanf("%d", &a);
//	////printf("%d\n", a);
//	//cin >> a;
//	//cout << "a值为 = " << a << endl;
//
//	//2.浮点型
//	//float f = 3.14f;
//	//cout << "请给浮点数f赋值" << endl;
//	////scanf("%f", &f);
//	////printf("%f\n", f);
//	//cin >> f;
//	//cout << "f值为 = " << f << endl;
//
//	//3.字符型
//	//char c = 'a';
//	//cout << "请给字符型c赋值" << endl;
//	////scanf("%c", &c);
//	////printf("%c\n", c);
//	//cin >> c;
//	//cout << "c值为 = " << c << endl;
//	
//	//4.字符串型
//	//string str = "hello";//C++的
//	//char str2[] = "world";//C的
//	//cout << "给str赋值" << endl;
//	////scanf("%s", &str2);//C不兼容C++
//	////printf("%s\n", str2);//同上
//	//cin >> str;//但C++不完全兼容C
//	//cout << str << endl;
//
//	//5.bool类型
//	bool flag = false;
//	cout << "请给bool类型重新赋值" << endl;
//	//scanf("%bool", flag);
//	//printf("%bool\n", flag);
//	cin >> flag;
//	cout << "bool为 = " << flag << endl;
//
//	system("pause");
//	return 0;
//}

//运算符 - 跟C一模一样
//作用 - 用于执行代码的运算
//运算符类型     作用
// 算数运算符 用于处理四则运算 - 和C语言一模一样
// 赋值运算符 用于将表达式的值赋给变量 - 同上
// 比较运算符 用于表达式的比较，并返回一个真值或假值 - +1
// 逻辑运算符 用于根据表达式的返回真值或假值 - +1

//int main()
//{
//	////算数运算符 - +-*/
//	//int a1 = 10;
//	//int b1 = 3;
//	//cout << a1 + b1 << endl;
//	//cout << a1 - b1 << endl;
//	//cout << a1 * b1 << endl;
//	//cout << a1 / b1 << endl;//不是3.333…因为a1是int，b1是int，c++规定；两个整数相除结果得到的一定是一个整数,把小数位去除了
//
//	//int a2 = 10;
//	//int b2 = 20;
//	//cout << a2 / b2 << endl;
//
//	////int a3 = 10;
//	////int b3 = 0;
//	////cout << a3 / b3 << endl;//两个数字相除，除数不可以为0的
//
//	////浮点数相除
//	//double d1 = 0.5;
//	//int d2 = 3;
//	//cout << d1 / d2 << endl;//运算的结果也可以是小数
//
//	system("pause");
//	return 0;
//}

//算数运算符 - %
//就是除法取余数，小数是不可以做取模运算的，一个都不行

//int main()
//{
//	int a1 = 10;
//	int b1 = 3;
//	cout << a1 % b1 << endl;// 10/3 = 3 ……1
//
//	int a2 = 10;
//	int b2 = 20;
//	cout << a2 % b2 << endl;// 10/20 = 0……10
//
//	int a3 = 10;
//	int b3 = 0;
//	cout << a3 % b3 << endl;// 10/0 = ？因为基于除法运算所以不能取模
//
//	//两个小数是不可以做取模运算C++规定
//	double d1 = 3.14;
//	int d2 = 1;//一个也不行
//	//cout << d1 % d2 << endl;
//
//	system("pause");
//	return 0;
//}

//算数运算符 - 递增递减++--

//int main()
//{
//	//1.前置递增
//	int a = 10;
//	++a;//变量+1
//	cout <<"a = " << a << endl;
//
//	//2.后置递增
//	int b = 10;
//	b++;//变量+1
//	cout << "b = " << b << endl;
//
//	//3.前置和后置的区别
//	//前置递增，先让变量+1，然后进行表达式运算
//	int a2 = 10;
//	int b2 = ++a2 * 10;
//	cout << "a2 = " << a2 << endl;//11
//	cout << "b2 = " << b2 << endl;//110
//
//	//后置递增，先进行表达式运算，然后让变量+1
//	int a3 = 10;
//	int b3 = a3++ * 10;
//	cout << "a3 = " << a3 << endl;//11
//	cout << "b3 = " << b3 << endl;//100
//
//	//递减相反
//
//	system("pause");
//	return 0;
//}

//赋值运算符 - C一样
//作用 - 用于将表达式的赋值给变量
//运算符:=、+=、-=、*=、/=、%=

//int main()
//{
//	//1.赋值运算符
//
//	// =
//	int a = 10;
//	a = 100;
//	cout << "a = " << a << endl;
//
//	// +=
//	a = 10;
//	a += 2;//a = a+2;
//	cout << "a = " << a << endl;
//
//	// -=
//	a = 10;
//	a -= 2;
//	cout << "a = " << a << endl;
//
//	// *=
//	a = 10;
//	a *= 2;
//	cout << "a = " << a << endl;
//
//	// /=
//	a = 10;
//	a /= 2;
//	cout << "a = " << a << endl;
//
//	// %=
//	a = 10;
//	a %= 2;
//	cout << "a = " << a << endl;
//
//	system("pause");
//	return 0;
//}

//比较运算符
//运算符：==、!=、<、>、<=、>=
//对就是真结果为非零，错就是假结果为零

int main()
{
	//比较运算符

	//==
	int a = 10;
	int b = 20;
	cout << (a == b) << endl;//因为有优先级的比较所以加上小括号，就像数组指针int(*arr)[]和指针数组int* arr[]

	//!=
	cout << (a != b) << endl;//1

	//<
	cout << (a < b) << endl;//1

	//>
	cout << (a > b) << endl;//0

	//<=
	cout << (a <= b) << endl;//1

	//>=
	cout << (a >= b) << endl;//0

	int* arr[] = { &a,&b };//指针数组
	int add[][2] = { {1, 2},{3, 4} };
	int(*arr2)[2] = add;//数组指针
	system("pause");
	return 0;
}

