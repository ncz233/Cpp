#define _CRT_SECURE_NO_WARNINGS 1
#include<vector>
#include<deque>
#include<algorithm>
#include<string>
#include<stdio.h>
#include<iostream>
#include<ctime>
using namespace std;

//案列 - 5名选手abcd,10各评委分别对每一名选手打分,去除评委最高分,去除评委最低分,取平均分
//
// 实现步骤
// 1.创建5名选手,放到vector中
// 2.遍历vector容器,取出每一个选手,执行for循环,可以把10个评分打分到deque容器中
// 3.sort算法对deque容器中分数排序,去除最高和最低分
// 4.deque容器遍历一遍,累计总分
// 5.获取平均分
//

//选手类
class Person
{
public:
	Person(string name, int score);
	~Person();

//private:
	string m_Name;//姓名
	int m_Score;//平均分
};

Person::Person(string name, int score)
{
	this->m_Name = name;
	this->m_Score = score;
}

Person::~Person()
{
}

void createPerson(vector<Person>& v)
{
	string nameSeed = "abcde";
	for (int i = 0; i < 5; i++)
	{
		string name = "选手";
		name += nameSeed[i];
		int score = 0;

		Person p(name, score);
		//创建的对象放到容器中
		v.push_back(p);
	}
}

//打分
void setScore(vector<Person>& v)
{
	for (vector<Person>::iterator it = v.begin(); it < v.end(); it++)
	{
		//将评委的分数放入到deque容器中
		deque<int>d;
		for (int i = 0; i < 10; i++)
		{
			int score = rand() % 41 + 60;
			d.push_back(score);
		}

		//测试看一下打的分
		//cout << "选手 = " << it->m_Name << "打分 = " << endl;
		//for (deque<int>::iterator dit = d.begin(); dit < d.end(); dit++)
		//{
		//	cout << *dit << " ";
		//}
		//cout << endl;

		//先排序后平均分
		sort(d.begin(), d.end());

		//去除最高和最低分
		d.pop_back();
		d.pop_front();

		//取平均分
		int sum = 0;
		for (deque<int>::iterator dit = d.begin(); dit < d.end(); dit++)
		{
			sum += *dit;//累加
		}

		int avg = sum / d.size();

		//将平均分赋值给选手上
		it->m_Score = avg;

	}
}

//打印
void showScore(vector<Person>& v)
{
	for (vector<Person>::iterator it = v.begin(); it < v.end(); it++)
	{
		cout << "姓名 = " << it->m_Name << "\t平均分 = " << (*it).m_Score << endl;
	}
}


void test01()
{
	//创建5名选手
	vector<Person> v;//存放5名选手
	createPerson(v);

	//测试
	//for (vector<Person>::iterator it = v.begin(); it < v.end(); it++)
	//{
	//	cout << "姓名 = " << (*it).m_Name << "\t分数" << it->m_Score << endl;
	//}

	//给5名选手打分
	setScore(v);
	
	//显示最后得分
	showScore(v);

}

int main()
{
	//随机数种子 - 时间戳
	srand((unsigned int)time(NULL));

	test01();

	system("pause");
	return 0;
}
