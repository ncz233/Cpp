#define _CRT_SECURE_NO_WARNINGS 1
#include<stdio.h>
#include<iostream>
#include<string>
#include<algorithm>
using namespace std;

//函数对象(仿函数)
//概念
// 重载函数调用操作符的类,其对象常称为函数对象
// 函数对象使用重载的()时,行为类似函数调用,也叫仿函数
//本质
// 函数对象(仿函数)是一个类,不是一个函数
// 
// 函数对象使用
// 特点
// 函数对象在使用时,可以像普通函数那样调用,可以有参数,可以有返回值
// 函数对象超出普通函数的概念,函数对象可以有自己的状态
// 函数对象可以作为参数传参
//总结
// 仿函数写法非常灵活,可以作为参数进行传递
// 仿函数本质是类 类型

// 函数对象在使用时,可以像普通函数那样调用,可以有参数,可以有返回值
class MyAdd
{
public:
	int operator()(int v1, int v2)
	{
		return v1 + v2;
	}
};

void test01()
{
	MyAdd myAdd;
	cout << myAdd(10, 10) << endl;
}

// 函数对象超出普通函数的概念,函数对象可以有自己的状态
class MyPrint
{
public:
	MyPrint()
	{
		this->count = 0;
	}
	void operator()(string test)
	{
		cout << test << endl;
		this->count++;
	}

	int count;

};

void test02()
{
	MyPrint myPrint;
	myPrint("hello world");
	myPrint("hello world");
	cout << "myprint调用的次数是 = " << myPrint.count << endl;

}

// 函数对象可以作为参数传参
void doPrint(MyPrint& mp,string test)
{
	mp(test);
}

void test03()
{
	MyPrint myPrint;
	doPrint(myPrint, "hello C++");

}

int main()
{
	//test01();
	//test02();
	test03();

	system("pause");
	return 0;
}
